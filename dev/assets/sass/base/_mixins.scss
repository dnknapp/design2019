// Convert px to rem for a single value, like font shorthand
@function calcRem($size) {
  $remSize: $size / 16;
  @return #{$remSize}rem;
}

// Convert px to rem, for multiple values, like padding
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin propRem($property, $values...) {
  $max: length($values);
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    @if $value > 0 {
      $remValues: #{$remValues + $value/16}rem;
    }
    @else {
      $remValues: #{$remValues + $value/16};
    }

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  } 
  
  #{$property}: $remValues; 
}

//Set page margin
@mixin page-margins($width: 90%) {
  width: $width;
  margin-left: auto;
  margin-right: auto;
}  


//Generate Base Grid 
//12 Columns
//CSS format: grid-base-4 for a for column grid
@mixin grid-base() {
  @for $col from 1 through 12 {
    .grid-base-#{$col} {
      @include page-margins();
      display: grid;
      grid-gap: 3rem;
      grid-template-columns: 1fr;
      @include mappy-bp(med) {  
        grid-template-columns: repeat($col, 1fr);
      }
    }
  }
}
@include grid-base();


//Generate Starting Columns and Spans from mixin
//Css format: grid-col-2-2 start at column 2 and span 2. This is using spans, not end lines.
@mixin grid-col() {
  @for $col-start from 1 through 12 {
    @for $col-span from 1 through 12 {
      @if 13 - $col-start >= $col-span {
        .grid-col-#{$col-start}-#{$col-span} {
          grid-column: 1;
          @include mappy-bp(med) {
          grid-column: $col-start / span $col-span;
          } 
        }
      }
    }
  }
}
@include grid-col();