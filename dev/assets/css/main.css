/* Dan Knapp Portfolio Site Styles */
/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0; }

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block; }

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px; }

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
     * Add the correct display in IE.
     */
main {
  display: block; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit; }

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic; }

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000; }

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%; }

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block; }

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none; }

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden; }

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible; }

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none; }

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */ }
  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0; }
  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText; }

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible; }

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */ }
  [type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */ }

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto; }

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block; }

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item; }

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block; }

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block; }

/**
     * Add the correct display in IE.
     */
template {
  display: none; }

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none; }

/* Variables */
.hidden {
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(100%);
          clip-path: inset(100%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px; }

.card-hover {
  transition: all .2s;
  box-shadow: 0 20px 30px -20px rgba(0, 0, 0, 0); }
  .card-hover:hover {
    -webkit-transform: translateY(-3px);
            transform: translateY(-3px);
    box-shadow: 0 20px 30px -20px rgba(0, 0, 0, 0.2); }
    .card-hover:hover h1, .card-hover:hover h2, .card-hover:hover h3, .card-hover:hover h4, .card-hover:hover h5 {
      border-bottom: 3px solid #222; }

.inline {
  display: inline; }

/*
This .scss loop will create "margin helpers" and "padding helpers" for use in your web projects.
It will generate several classes such as:

.m-r-10 which gives margin-right 10 pixels.
.m-r-15 gives MARGIN to the RIGHT 15 pixels.
.m-t-15 gives MARGIN to the TOP 15 pixels and so on.

.p-b-5 gives PADDING to the BOTTOM of 5 pixels
.p-l-40 gives PADDING to the LEFT of 40 pixels

The first letter is "m" or "p" for MARGIN or PADDING
Second letter is "t", "b", "l", or "r" for TOP, BOTTOM, LEFT, or RIGHT
Third letter is the number of spacing in pixels. Adjust the amounts generated by editing the $spaceamounts variable below.

*/
.mt0 {
  margin-top: 0rem; }

.pt0 {
  padding-top: 0rem; }

.mb0 {
  margin-bottom: 0rem; }

.pb0 {
  padding-bottom: 0rem; }

.ml0 {
  margin-left: 0rem; }

.pl0 {
  padding-left: 0rem; }

.mr0 {
  margin-right: 0rem; }

.pr0 {
  padding-right: 0rem; }

.mt1 {
  margin-top: 1rem; }

.pt1 {
  padding-top: 1rem; }

.mb1 {
  margin-bottom: 1rem; }

.pb1 {
  padding-bottom: 1rem; }

.ml1 {
  margin-left: 1rem; }

.pl1 {
  padding-left: 1rem; }

.mr1 {
  margin-right: 1rem; }

.pr1 {
  padding-right: 1rem; }

.mt2 {
  margin-top: 2rem; }

.pt2 {
  padding-top: 2rem; }

.mb2 {
  margin-bottom: 2rem; }

.pb2 {
  padding-bottom: 2rem; }

.ml2 {
  margin-left: 2rem; }

.pl2 {
  padding-left: 2rem; }

.mr2 {
  margin-right: 2rem; }

.pr2 {
  padding-right: 2rem; }

.mt3 {
  margin-top: 3rem; }

.pt3 {
  padding-top: 3rem; }

.mb3 {
  margin-bottom: 3rem; }

.pb3 {
  padding-bottom: 3rem; }

.ml3 {
  margin-left: 3rem; }

.pl3 {
  padding-left: 3rem; }

.mr3 {
  margin-right: 3rem; }

.pr3 {
  padding-right: 3rem; }

.mt4 {
  margin-top: 4rem; }

.pt4 {
  padding-top: 4rem; }

.mb4 {
  margin-bottom: 4rem; }

.pb4 {
  padding-bottom: 4rem; }

.ml4 {
  margin-left: 4rem; }

.pl4 {
  padding-left: 4rem; }

.mr4 {
  margin-right: 4rem; }

.pr4 {
  padding-right: 4rem; }

.mt5 {
  margin-top: 5rem; }

.pt5 {
  padding-top: 5rem; }

.mb5 {
  margin-bottom: 5rem; }

.pb5 {
  padding-bottom: 5rem; }

.ml5 {
  margin-left: 5rem; }

.pl5 {
  padding-left: 5rem; }

.mr5 {
  margin-right: 5rem; }

.pr5 {
  padding-right: 5rem; }

.mt6 {
  margin-top: 6rem; }

.pt6 {
  padding-top: 6rem; }

.mb6 {
  margin-bottom: 6rem; }

.pb6 {
  padding-bottom: 6rem; }

.ml6 {
  margin-left: 6rem; }

.pl6 {
  padding-left: 6rem; }

.mr6 {
  margin-right: 6rem; }

.pr6 {
  padding-right: 6rem; }

.mt7 {
  margin-top: 7rem; }

.pt7 {
  padding-top: 7rem; }

.mb7 {
  margin-bottom: 7rem; }

.pb7 {
  padding-bottom: 7rem; }

.ml7 {
  margin-left: 7rem; }

.pl7 {
  padding-left: 7rem; }

.mr7 {
  margin-right: 7rem; }

.pr7 {
  padding-right: 7rem; }

.mtq {
  margin-top: .25rem; }

.ptq {
  padding-top: .25rem; }

.mbq {
  margin-bottom: .25rem; }

.pbq {
  padding-bottom: .25rem; }

.mlq {
  margin-left: .25rem; }

.plq {
  padding-left: .25rem; }

.mrq {
  margin-right: .25rem; }

.prq {
  padding-right: .25rem; }

.mth {
  margin-top: .5rem; }

.pth {
  padding-top: .5rem; }

.mbh {
  margin-bottom: .5rem; }

.pbh {
  padding-bottom: .5rem; }

.mlh {
  margin-left: .5rem; }

.plh {
  padding-left: .5rem; }

.mrh {
  margin-right: .5rem; }

.prh {
  padding-right: .5rem; }

img {
  display: block;
  -o-object-fit: cover;
     object-fit: cover;
  height: auto;
  max-width: 100%; }

.btn-reset {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background: transparent;
  padding: 0;
  border: 0; }
  .btn-reset:focus {
    outline: 0; }

.button {
  display: inline-block;
  padding: .75rem 1.25rem;
  color: #222;
  background: #fff;
  border: 2px solid #222;
  border-radius: 30px;
  transition: all .2s; }
  .button:hover {
    color: #fff;
    background: #222; }

/* Remove outline for non-keyboard :focus */
/* Optional: Customize .focus-visible */
hr {
  border-top: 2px solid #222;
  margin: 1rem 0; }

ul {
  padding: 0;
  margin: 1rem 0;
  list-style-type: none; }

.tag {
  display: inline-block;
  border-radius: 13px;
  list-style-type: none;
  background-color: #f5f5f5;
  padding: .25rem .75rem;
  margin: 0 .25rem .25rem 0; }

body {
  font-size: 16px;
  font-family: agenda, Helvetica, Arial, sans-serif;
  color: #222;
  font-weight: 400; }

a {
  text-decoration: none;
  color: #222; }

.display {
  font: 900 3rem/1 bookmania, Georgia, Times, Times New Roman, serif;
  text-align: center; }
  @media all and (min-width: 57.5em) {
    .display {
      font-size: 6vw; } }

.site-title {
  font: 900 1.5625rem/1.3 bookmania, Georgia, Times, Times New Roman, serif; }

h1, .h1 {
  font: 900 2rem/1.4 bookmania, Georgia, Times, Times New Roman, serif; }

h2, .h2 {
  font: 400 1.75rem/1.2 bookmania, Georgia, Times, Times New Roman, serif;
  margin: 1rem 0; }

h3, .h3 {
  font: 400 1.5625rem/1.3 bookmania, Georgia, Times, Times New Roman, serif; }

h4, .h4 {
  font: 600 1.375rem/1.3 agenda, Helvetica, Arial, sans-serif; }

h5, .h5 {
  font: 600 1.25rem/1.4375 agenda, Helvetica, Arial, sans-serif;
  margin: 0; }

h6, .h6 {
  font: 600 0.9375rem/1.4375 agenda, Helvetica, Arial, sans-serif;
  margin: 0; }

p {
  font: 400 1.25rem/1.4375 agenda, Helvetica, Arial, sans-serif;
  margin: 0 0 1em 0; }
  p a {
    text-decoration: underline; }

.font-small {
  font: 400 0.9375rem/1.4 agenda, Helvetica, Arial, sans-serif; }

.font-tiny, .tag {
  font: 400 0.8125rem/1.4 agenda, Helvetica, Arial, sans-serif; }

.button {
  font: 600 0.9375rem/1.4 agenda, Helvetica, Arial, sans-serif; }

strong {
  font-weight: 600; }

.color-roman {
  color: #e05c5c; }

.bullet {
  list-style-type: disc; }

main {
  padding: 6rem 0 0 0; }

.flex {
  display: flex; }

.flex-col {
  display: flex;
  flex-direction: column; }

.grid-base-1 {
  width: 90%;
  margin-left: auto;
  margin-right: auto;
  display: grid;
  grid-gap: 3rem;
  grid-template-columns: 1fr; }
  @media all and (min-width: 48em) {
    .grid-base-1 {
      grid-template-columns: repeat(1, 1fr); } }

.grid-base-2 {
  width: 90%;
  margin-left: auto;
  margin-right: auto;
  display: grid;
  grid-gap: 3rem;
  grid-template-columns: 1fr; }
  @media all and (min-width: 48em) {
    .grid-base-2 {
      grid-template-columns: repeat(2, 1fr); } }

.grid-base-3 {
  width: 90%;
  margin-left: auto;
  margin-right: auto;
  display: grid;
  grid-gap: 3rem;
  grid-template-columns: 1fr; }
  @media all and (min-width: 48em) {
    .grid-base-3 {
      grid-template-columns: repeat(3, 1fr); } }

.grid-base-4 {
  width: 90%;
  margin-left: auto;
  margin-right: auto;
  display: grid;
  grid-gap: 3rem;
  grid-template-columns: 1fr; }
  @media all and (min-width: 48em) {
    .grid-base-4 {
      grid-template-columns: repeat(4, 1fr); } }

.grid-base-6 {
  width: 90%;
  margin-left: auto;
  margin-right: auto;
  display: grid;
  grid-gap: 3rem;
  grid-template-columns: 1fr; }
  @media all and (min-width: 48em) {
    .grid-base-6 {
      grid-template-columns: repeat(6, 1fr); } }

.grid-col-1-1 {
  grid-column: 1; }

.grid-col-1-2 {
  grid-column: 1; }
  @media all and (min-width: 48em) {
    .grid-col-1-2 {
      grid-column: 1/span 2; } }

.grid-col-1-3 {
  grid-column: 1; }
  @media all and (min-width: 48em) {
    .grid-col-1-3 {
      grid-column: 1/span 3; } }

.grid-col-1-4 {
  grid-column: 1; }
  @media all and (min-width: 48em) {
    .grid-col-1-4 {
      grid-column: 1/span 4; } }

.grid-col-1-5 {
  grid-column: 1; }
  @media all and (min-width: 48em) {
    .grid-col-1-5 {
      grid-column: 1/span 5; } }

.grid-col-1-6 {
  grid-column: 1; }
  @media all and (min-width: 48em) {
    .grid-col-1-6 {
      grid-column: 1/span 6; } }

.grid-col-2-1 {
  grid-column: 1; }
  @media all and (min-width: 48em) {
    .grid-col-2-1 {
      grid-column: 2/span 1; } }

.grid-col-2-2 {
  grid-column: 1; }
  @media all and (min-width: 48em) {
    .grid-col-2-2 {
      grid-column: 2/span 2; } }

.grid-col-2-3 {
  grid-column: 1; }
  @media all and (min-width: 48em) {
    .grid-col-2-3 {
      grid-column: 2/span 3; } }

.grid-col-2-4 {
  grid-column: 1; }
  @media all and (min-width: 48em) {
    .grid-col-2-4 {
      grid-column: 2/span 4; } }

.grid-col-3-1 {
  grid-column: 1; }
  @media all and (min-width: 48em) {
    .grid-col-3-1 {
      grid-column: 3/span 1; } }

.grid-col-3-2 {
  grid-column: 1; }
  @media all and (min-width: 48em) {
    .grid-col-3-2 {
      grid-column: 3/span 2; } }

.grid-col-4-1 {
  grid-column: 1; }
  @media all and (min-width: 48em) {
    .grid-col-4-1 {
      grid-column: 4/span 1; } }

.row-gap-0 {
  grid-row-gap: 0; }

.justify-start {
  justify-self: start; }

.justify-end {
  justify-self: end; }

.justify-center {
  justify-self: center; }

.bg-color-1 {
  background-color: #f5f5f5; }

header {
  position: absolute;
  width: 100%;
  background-color: transparent;
  z-index: 1000; }

.header-inner {
  display: grid;
  grid-column-gap: 20px;
  grid-template-columns: 3rem 1fr;
  align-items: flex-start;
  margin: 1rem; }

.header-nav-button {
  grid-column-start: 1;
  height: 40px;
  width: 40px; }

.header-title-wrapper {
  display: flex;
  flex-wrap: wrap;
  grid-column-start: 2;
  justify-content: space-between;
  padding: 0.375rem 0 0 0; }

.header-subtitle-wrapper {
  display: flex;
  flex-wrap: wrap; }

.header-subtitle {
  margin: 0 1rem 0 0;
  white-space: nowrap; }

.header-city {
  white-space: nowrap; }

.header-nav-active {
  position: fixed;
  height: 100%;
  overflow: auto; }

nav {
  width: 50%;
  margin: 3rem 0 0 0;
  grid-column-start: 2; }

#home-hero {
  min-height: 50vh; }

.skill-nav-container {
  position: relative;
  display: flex;
  align-items: center; }

.skill-nav-buttons {
  position: absolute;
  width: 100%;
  display: flex;
  justify-content: space-between;
  pointer-events: none; }

.btn-skill {
  width: 40px;
  height: 40px;
  background-color: rosybrown;
  pointer-events: auto; }

.skill-card-container {
  width: 100%;
  display: grid;
  grid-template-columns: 1px;
  grid-auto-flow: column;
  grid-auto-columns: 80vw;
  grid-gap: 5%;
  padding: 3rem 0;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none; }
  .skill-card-container::-webkit-scrollbar {
    display: none; }
  .skill-card-container:before, .skill-card-container:after {
    content: '';
    width: 1px; }
  @media all and (min-width: 48em) {
    .skill-card-container {
      grid-template-columns: 1rem;
      grid-auto-columns: calc(50vw - 8rem);
      grid-gap: 3rem; }
      .skill-card-container:before, .skill-card-container:after {
        content: '';
        width: 1rem; } }
  @media all and (min-width: 75em) {
    .skill-card-container {
      grid-auto-columns: calc(33vw - 6rem); } }

.skill-card {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr auto; }
  .skill-card img {
    grid-column: 1 / span 1;
    grid-row: 1 / span 2; }

.skill-card-bg {
  background-color: #f5f5f5;
  grid-column: 1 / span 2;
  grid-row: 2 / span 2; }

.skill-card-text {
  grid-column: 1 / span 2;
  grid-row: 3 / span 1;
  margin: 2rem; }

.project-card-container {
  display: grid;
  grid-template-rows: 2rem auto 2rem 2rem auto 2rem;
  grid-template-columns: 2rem auto 2rem;
  align-items: center;
  background-color: #fff; }
  @media all and (min-width: 48em) {
    .project-card-container {
      grid-template-columns: 2rem 1fr 2rem 2rem 1fr 2rem;
      grid-template-rows: 2rem 1fr 2rem; } }

.project-card-img {
  grid-row: 2 / span 2;
  grid-column: 2 / span 1;
  z-index: 1; }
  @media all and (min-width: 48em) {
    .project-card-img {
      grid-column: 2 / span 2;
      grid-row: 2 / span 1; } }

.project-card-bg {
  grid-row: 1 / span 2;
  grid-column: 1 / span 3;
  align-self: stretch;
  -o-object-position: top center;
     object-position: top center;
  height: 100%;
  width: 100%; }
  @media all and (min-width: 48em) {
    .project-card-bg {
      grid-column: 1 / span 2;
      grid-row: 1 / span 3;
      align-self: stretch;
      -o-object-position: center right;
         object-position: center right; } }

.project-card-text {
  grid-row: 5 / span 1;
  grid-column: 2 / span 1; }
  @media all and (min-width: 48em) {
    .project-card-text {
      grid-column: 5 / span 1;
      grid-row: 2 / span 1; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
